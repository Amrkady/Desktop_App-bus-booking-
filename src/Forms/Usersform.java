/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Forms;

import handlers.*;
import Beans.*;
import java.sql.SQLException;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import static javax.swing.JList.*;
import javax.swing.JOptionPane;
import javax.swing.table.*;

/**
 *
 * @author Alkady
 */

public class Usersform extends javax.swing.JFrame {
  boolean flag=false,inserttik;
   boolean flag2 ,sel=false;
  int count=0 ,coun=0;
 
    /**
     * Creates new form Usersform
     */
    public Usersform() {
        initComponents();
        msg.setText("");
       // fun();
        startCity();
        yearMonthDay();
        getAllTransaction();
        transperdate.setVisible(false);
        transtable.setShowGrid(true);
        ok.setVisible(false);   bus.setVisible(false);  quantity.setVisible(false);
        busid.setVisible(false);  taking.setVisible(false);  quant.setVisible(false);
        tknumber.setVisible(false);  take.setVisible(false);  tot.setVisible(false);
        ticketnumber.setVisible(false);  price.setVisible(false);  total.setVisible(false);
        prices.setVisible(false); save.setVisible(false); reset.setVisible(false); cancel.setVisible(false);
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        user = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        from = new javax.swing.JComboBox();
        to = new javax.swing.JComboBox();
        bus = new javax.swing.JLabel();
        busid = new javax.swing.JComboBox();
        quant = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        prices = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        total = new javax.swing.JTextField();
        tknumber = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        msg = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        taking = new javax.swing.JLabel();
        tot = new javax.swing.JButton();
        ok = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        take = new javax.swing.JTextField();
        month = new javax.swing.JComboBox();
        year = new javax.swing.JComboBox();
        day = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        ticketnumber = new javax.swing.JList();
        logout = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        transtable = new javax.swing.JTable();
        transyear = new javax.swing.JComboBox();
        transmonth = new javax.swing.JComboBox();
        transday = new javax.swing.JComboBox();
        transok = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        transperdate = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        logout1 = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        jLabel9.setText("jLabel9");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        user.setBackground(new java.awt.Color(0, 204, 204));
        user.setForeground(new java.awt.Color(51, 51, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Date");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setText("From");

        from.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        from.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select City" }));
        from.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fromItemStateChanged(evt);
            }
        });

        to.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        to.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select City" }));

        bus.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bus.setForeground(new java.awt.Color(51, 51, 255));
        bus.setText("Bus Id ");

        busid.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        busid.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select Bus" }));

        quant.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        quant.setForeground(new java.awt.Color(51, 51, 255));
        quant.setText("Quantity");

        prices.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        prices.setForeground(new java.awt.Color(51, 51, 255));
        prices.setText("Price");

        price.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                priceMouseClicked(evt);
            }
        });

        total.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                totalMouseClicked(evt);
            }
        });

        tknumber.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tknumber.setForeground(new java.awt.Color(51, 51, 255));
        tknumber.setText("Ticket Number");

        save.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        save.setText("book");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        cancel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        msg.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        msg.setForeground(new java.awt.Color(255, 51, 51));
        msg.setText("Enter all Inforametion ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 255));
        jLabel3.setText("To");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        taking.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        taking.setForeground(new java.awt.Color(51, 51, 255));
        taking.setText("Tacking off");

        tot.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        tot.setText("Total");
        tot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totActionPerformed(evt);
            }
        });

        ok.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ok.setText("OK");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });

        reset.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        take.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                takeMouseClicked(evt);
            }
        });

        month.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        month.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MM" }));

        year.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        year.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "YYYY" }));

        day.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        day.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DD" }));

        ticketnumber.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
        jScrollPane3.setViewportView(ticketnumber);

        logout.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        logout.setForeground(new java.awt.Color(255, 51, 51));
        logout.setText("Log Out");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout userLayout = new javax.swing.GroupLayout(user);
        user.setLayout(userLayout);
        userLayout.setHorizontalGroup(
            userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(ok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(total)
                        .addComponent(save))
                    .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(userLayout.createSequentialGroup()
                            .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, userLayout.createSequentialGroup()
                                    .addComponent(taking)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(take, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(userLayout.createSequentialGroup()
                                    .addComponent(bus)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(busid, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, userLayout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(from, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, userLayout.createSequentialGroup()
                                    .addGap(122, 122, 122)
                                    .addComponent(reset)))
                            .addGap(111, 111, 111))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, userLayout.createSequentialGroup()
                            .addComponent(prices)
                            .addGap(71, 71, 71)
                            .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(quant))))
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel3)
                        .addGap(39, 39, 39)
                        .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userLayout.createSequentialGroup()
                        .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(userLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(logout))
                            .addGroup(userLayout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cancel)
                                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tknumber)
                                        .addGap(75, 75, 75)))))
                        .addGap(19, 19, 19))))
            .addGroup(userLayout.createSequentialGroup()
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userLayout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(userLayout.createSequentialGroup()
                                .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(userLayout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(msg, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        userLayout.setVerticalGroup(
            userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userLayout.createSequentialGroup()
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logout))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(from, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userLayout.createSequentialGroup()
                        .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(userLayout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(busid, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bus))
                                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(userLayout.createSequentialGroup()
                                        .addGap(74, 74, 74)
                                        .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(take, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(taking))
                                        .addGap(18, 18, 18)
                                        .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(prices)
                                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(quant))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userLayout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(ok, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tot, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(309, 309, 309)))
                        .addGap(26, 26, 26)
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(userLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tknumber)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(msg)
                .addGap(302, 302, 302))
        );

        jTabbedPane1.addTab("booking", user);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 255));
        jLabel7.setText("Transactions Per date");

        transtable.setAutoCreateRowSorter(true);
        transtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Date", "From", "To", "Taking Off", "Bus ID", "Price ", "Quantity", "Total"
            }
        ));
        transtable.setRowSorter(null);
        jScrollPane1.setViewportView(transtable);

        transyear.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        transyear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "YYYY" }));

        transmonth.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        transmonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MM" }));

        transday.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        transday.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DD" }));

        transok.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        transok.setText("OK");
        transok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transokActionPerformed(evt);
            }
        });

        transperdate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date ", "Bus ID", "Taking Off", "Price", "Qauntity", "Total"
            }
        ));
        jScrollPane2.setViewportView(transperdate);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 0, 255));
        jLabel11.setText("All Transaction ");

        logout1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        logout1.setForeground(new java.awt.Color(255, 102, 102));
        logout1.setText("Log Out");
        logout1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logout1))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 810, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(99, 99, 99)
                                .addComponent(transok))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(transday, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(transmonth, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(transyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 261, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11))
                    .addComponent(logout1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(transday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(transmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(transyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addComponent(transok, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("transactions", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void getAllTransaction()
    {
        Userhandler uh = new Userhandler();
        Vector usrList=new Vector();
        try {
            usrList = uh.getAllTransactions();
        } catch (SQLException ex) { 
            System.out.println("get all transaction error "+ex.getMessage());
        }
        try {
            uh.closeConnection();
        } catch (SQLException ex) {
            Logger.getLogger(Usersform.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        DefaultTableModel dtm =(DefaultTableModel) transtable.getModel();
        dtm.setRowCount(0);
        for(int v=0; v< usrList.size() ; v++)
        {
          Transbean ub = (Transbean)usrList.elementAt(v);
          
          Vector newRow = new Vector();
          newRow.addElement(ub.getId());
          newRow.addElement(ub.getTransdate());
          newRow.addElement(ub.getFromcity());
          newRow.addElement(ub.getTocity());
          newRow.addElement(ub.getTakingoff());
          newRow.addElement(ub.getBusid());
          newRow.addElement(ub.getPrice());
          newRow.addElement(ub.getQuantity());
          newRow.addElement(ub.getTotal());
          dtm.addRow(newRow);
        }
        transtable.setModel(dtm);
        transtable.updateUI();
        jScrollPane1.setViewportView(transtable);
  
    }
    public boolean ckeckAllIDIsDigit(String str)
    {
       boolean validID=false;
       for(int i=0;i<str.length();i++)
         {
                if(Character.isDigit(str.charAt(i)))
                  validID=true;
                else 
                {
                    validID=false;
                    break;
                }
         }
       return validID ;
    }
    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        from.setSelectedItem("-Select City");
        busid.removeAllItems();
        to.setSelectedItem("-Select City");
        busid.setSelectedItem("-Select bus ");
        total.setText("");
        quantity.setText("");
        price.setText("");
        take.setText("");
        msg.setText("");
        ticketnumber.setSelectedIndex(-1);
        bus.setVisible(false);  quantity.setVisible(false);
        busid.setVisible(false);  taking.setVisible(false);  quant.setVisible(false);
        tknumber.setVisible(false);  take.setVisible(false);  tot.setVisible(false);
        ticketnumber.setVisible(false);  price.setVisible(false);  total.setVisible(false);
        prices.setVisible(false); save.setVisible(false); reset.setVisible(false); cancel.setVisible(false);
         
        
    }//GEN-LAST:event_resetActionPerformed

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
        // TODO add your handling code here:
        
        busTakingPrice();
        ticketsNumbers();
        if(count !=2){
            showa();
        }
    }//GEN-LAST:event_okActionPerformed

    private void showa() {
        quantity.setVisible(true);
        taking.setVisible(true);  quant.setVisible(true);ok.setVisible(false);
        tknumber.setVisible(true);  take.setVisible(true);  tot.setVisible(true);
        ticketnumber.setVisible(true);  price.setVisible(true);  total.setVisible(true);
        prices.setVisible(true); save.setVisible(true); reset.setVisible(true); cancel.setVisible(true);
    }

    private void ticketsNumbers()
    {
         String busID1= busid.getSelectedItem().toString();
        
       String yy=year.getSelectedItem().toString();
       String mm=month.getSelectedItem().toString();
       String dd=day.getSelectedItem().toString();
     
       String date=dd+"/"+mm+"/"+yy;
      
     if(busID1.charAt(0)!='-' && yy.charAt(0)!='Y' && mm.charAt(0)!='M'&& dd.charAt(0)!='D') 
     {
          count=0;
          int busID = Integer.parseInt(busID1);
          Vector ticket=new Vector();
          Userhandler uh=new Userhandler();
          String numseat="";
        try {
           numseat= uh.getAllnuberseats(busID);
           
        } catch (SQLException ex) {
             System.out.println("getAllnuberseats error "+ex.getMessage());
        }
          
        try {
            ticket=uh.getAllTicketnum(date,busID);
            
        } catch (SQLException ex) {
            System.out.println("getAllTicketnum error "+ex.getMessage());
        }
        try {
            uh.closeConnection();
        } catch (SQLException ex) {
            Logger.getLogger(Usersform.class.getName()).log(Level.SEVERE, null, ex);
        }
        numbersSeatsTable(numseat, ticket);
        
       }  
         else
         {
             count=2;
             if(flag2)
         JOptionPane.showMessageDialog(null,"Please Select Bus Id And Date");
         }   
        
    }

    private void numbersSeatsTable(String numseat, Vector ticket) throws NumberFormatException {
        
        Vector vc=new Vector();
         int bsseats=Integer.parseInt(numseat);
         for(int j=1; j<=bsseats;j++)
        {
            vc.addElement(j);
        }
        
        if(ticket.size()>0)
        {
            for (int i=0; i<ticket.size();i++)
            {
                for(int j=0; j<vc.size();j++)
                {
                    if(vc.elementAt(j)==ticket.elementAt(i))
                    {
                        vc.removeElementAt(j);
                    }
                }
            }
           ticketnumber=new JList(vc); 
            if(vc.size()==0)
        JOptionPane.showMessageDialog(null, "pleaze Select Another Bus Id Because this Bus Tickets IS Booking in this day");
        }
        else
        {
         ticketnumber=new JList(vc);   
        }
    
     
        ticketnumber.setLayoutOrientation(VERTICAL_WRAP);
        jScrollPane3.setViewportView(ticketnumber);
    }
    
  
    private void totActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totActionPerformed
        // TODO add your handling code here:
        String price1= price.getText();
        
        String qy= quantity.getText();
        
        if(price1.length()>0 && qy.length()>0 && ckeckAllIDIsDigit(qy)){
            int quant=Integer.parseInt(qy);
            int pc=Integer.parseInt(price1);
            int ttl=quant*pc;
            String tt=""+ttl;
            total.setText(tt);

        }
        else
      JOptionPane.showMessageDialog(null, " please enter Quantity and must be Numbers ");
    }//GEN-LAST:event_totActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        getBusId();
        if(count !=1)
        {
        bus.setVisible(true);
        busid.setVisible(true);
        ok.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        
     resetActionPerformed(evt);
    }//GEN-LAST:event_cancelActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        insertTicket();
         if(inserttik){
         insertTransaction();
            getAllTransaction();
         // ubdateticekt(tickid,tranid);
            resetActionPerformed(evt);
            
         JOptionPane.showMessageDialog(null, "booking");
         }
         
    }//GEN-LAST:event_saveActionPerformed
  
//  private void ubdateticekt(int tickid,int transid ) 
//  {
//      Userhandler uh=new Userhandler();
//      if(tickid>0 &&transid>0)
//      {
//      try 
//      {
//          uh.updateTicket(tickid,transid);
//      } catch (SQLException ex) {
//          System.out.println("update ticket error"+ex.getMessage());
//      }
//      }
//    
  //}  
    
    private void fromItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fromItemStateChanged
        // TODO add your handling code here:
        destCity();
    }//GEN-LAST:event_fromItemStateChanged

    private void transokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transokActionPerformed
        // TODO add your handling code here:
        transperdate.setVisible(true);
        transPerDate();
        
    }//GEN-LAST:event_transokActionPerformed

    private void takeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_takeMouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, " you mustn't enter any thing her ");
    }//GEN-LAST:event_takeMouseClicked

    private void priceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_priceMouseClicked
        // TODO add your handling code here:
       JOptionPane.showMessageDialog(null, " you mustn't enter any thing her ");
    }//GEN-LAST:event_priceMouseClicked

    private void totalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totalMouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, " you mustn't enter any thing her ");
    }//GEN-LAST:event_totalMouseClicked

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        LoginForm vu = new LoginForm();
        vu.setEnabled(true);
        vu.setVisible(true);

        this.setEnabled(false);
        this.setVisible(false);

    }//GEN-LAST:event_logoutActionPerformed

    private void logout1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout1ActionPerformed
        // TODO add your handling code here:
         LoginForm vu = new LoginForm();
        vu.setEnabled(true);
        vu.setVisible(true);

        this.setEnabled(false);
        this.setVisible(false);
    }//GEN-LAST:event_logout1ActionPerformed
   
    private void deleteTransaction()
    {
    Transbean tb=getSelectedTransaction();
     int selectedroutes = transtable.getSelectedRow();
       if(selectedroutes >= 0)
        { 
       if(tb !=null)
      { 
       int x= JOptionPane.showConfirmDialog(null," Are you Want to Delete This Raw");  //yes =0; no=1 cancel =2
       if(x==0)
       {
         Userhandler uh=new Userhandler();
      try {
           ///////////// delete transaction/////////////////
          uh.deleteTransactionById(tb.getId());
          
          
          //////////////delete ticket ////////////////////////
             uh.deleteticketByTransId(tb.getId());
          
           JOptionPane.showMessageDialog(null," Deleted ");
              getAllTransaction();
             } 
      catch (SQLException ex) 
                {
          System.out.println(" delete ticket trans error "+ex.getMessage());
                 }
           try {
               uh.closeConnection();
           } catch (SQLException ex) {
               Logger.getLogger(Usersform.class.getName()).log(Level.SEVERE, null, ex);
           }
         }
       else
       {
          JOptionPane.showMessageDialog(null, "not deleted ");
               }
      }
    }
  }
    
    Transbean getSelectedTransaction()
    {
        Transbean tb = new Transbean();
        int selectedroutes = transtable.getSelectedRow();
        if(selectedroutes >= 0)
        {
            tb.setId((int)transtable.getValueAt(selectedroutes, 0) );
            tb.setTransdate(transtable.getValueAt(selectedroutes,1).toString() );
            tb.setFromcity(transtable.getValueAt(selectedroutes, 2).toString());
            tb.setTocity(transtable.getValueAt(selectedroutes,3).toString());
            tb.setTakingoff(transtable.getValueAt(selectedroutes, 4).toString() );
            tb.setBusid((int)transtable.getValueAt(selectedroutes,5));
            tb.setPrice((int)transtable.getValueAt(selectedroutes, 6));
            tb.setQuantity((int)transtable.getValueAt(selectedroutes,7));
            tb.setTotal((int)transtable.getValueAt(selectedroutes,8));
            
        
        }
        
        else
            
        {
           
           JOptionPane.showMessageDialog(null, " Please Select Transaction Raw to Deleted and press delete");
        }
        return tb;
    }
    private void transPerDate()
    {
       String yy=transyear.getSelectedItem().toString();
       String mm=transmonth.getSelectedItem().toString();
       String dd=transday.getSelectedItem().toString();
       String date=dd+"/"+mm+"/"+yy; 
       if(yy.charAt(0)!='Y' && mm.charAt(0)!='M'&& dd.charAt(0)!='D'){
          Vector usrList=new Vector();
        Userhandler uh=new Userhandler();
        try {
          usrList=uh.getAllTransactionsPerDate(date);
        } catch (SQLException ex) {
            System.out.println(" get per date "+ex.getMessage());
        }
        try {
            uh.closeConnection();
        } catch (SQLException ex) {
            Logger.getLogger(Usersform.class.getName()).log(Level.SEVERE, null, ex);
        }
         DefaultTableModel dtm =(DefaultTableModel) transperdate.getModel();
        dtm.setRowCount(0);
        if(usrList.size()>0)
        {
        for(int v=0; v< usrList.size() ; v++)
        {
          Transbean ub = (Transbean)usrList.elementAt(v);
          
          Vector newRow = new Vector();
          newRow.addElement(ub.getTransdate());
          newRow.addElement(ub.getBusid());
          newRow.addElement(ub.getTakingoff());
          newRow.addElement(ub.getPrice());
          newRow.addElement(ub.getQuantity());
          newRow.addElement(ub.getTotal());
          dtm.addRow(newRow);
        }
        transperdate.setModel(dtm);
        transperdate.updateUI();
        jScrollPane2.setViewportView(transperdate);
           }
           else
            {
            JOptionPane.showMessageDialog(null," Please Enter completly  date  ");
            }
       }
        else
        {
        JOptionPane.showMessageDialog(null," Pleaase Enter completly  date  ");
        }
  
    }
    public void yearMonthDay()
    {
       
    for( int j=1;j<13;j++)
    {
        if(j<10)
        {
      month.addItem("0"+j);
      transmonth.addItem("0"+j);
               }
        else
        {
       month.addItem(j);
       transmonth.addItem(j);
        }
    }
    for(int i=2015;i<2050;i++)
    {
        
     year.addItem(i);
     transyear.addItem(i);
    }
    for(int i=1;i<32;i++)
        
    {
        
         if(i<10)
         {
      day.addItem("0"+i);
      transday.addItem("0"+i);
         }
        else
         {
       transday.addItem(i);
       day.addItem(i);
         }
      
    }
    
    }
    
    private Transbean transaction()
    {
        
       String price1= price.getText();
       
       String qy= quantity.getText();
       
       String tot= total.getText();
       
       String takeoff= take.getText();
       String citystar=from.getSelectedItem().toString();
       String cityend=to.getSelectedItem().toString();
       
       String busID1= busid.getSelectedItem().toString();
       
      
       String yy=year.getSelectedItem().toString();
       String mm=month.getSelectedItem().toString();
       String dd=day.getSelectedItem().toString();
     
       String date=dd+"/"+mm+"/"+yy;
       Transbean tb=new Transbean();
       if(price1.length()>0 && qy.length()>0&& tot.length()>0&&cityend.length()>0&&busID1.length()>0&&
             takeoff.length()>0&&citystar.length()>0 &&citystar.length()>0
               &&yy.charAt(0)!='Y' && mm.charAt(0)!='M'&& dd.charAt(0)!='D')
       {
          int pc=Integer.parseInt(price1); 
          int quant=Integer.parseInt(qy);
          int tol=Integer.parseInt(tot);
          int busID = Integer.parseInt(busID1);
          tb.setBusid(busID);
          tb.setFromcity(citystar);
          tb.setTocity(cityend);
          tb.setPrice(pc);
          tb.setQuantity(quant);
          tb.setTotal(tol);
          tb.setTransdate(date);
          tb.setTakingoff(takeoff);
       }
       else
       {
           
           flag=true;   
         JOptionPane.showMessageDialog(null,"Please enter all information to  booking"); 
           
        
       }
       return tb;  
    }
    
    
    public int insertTransaction()
    {
        int transid=-1;
     Userhandler uh=new Userhandler();
       Transbean tb=transaction();
      
       if(tb !=null && !flag){
        try {
        transid=uh.addTransaction(tb);
            
        } catch (SQLException ex) {
            System.out.println("add trans error"+ex.getMessage());
        }
        try
        {
            uh.closeConnection();
        } catch (SQLException ex) {
            Logger.getLogger(Usersform.class.getName()).log(Level.SEVERE, null, ex);
        }
       }
       else
       { 
           if(!flag)
           msg.setText(" some of information not entered");
       }
       return transid;
    }
    
    private int insertTicket()
    {
       int ticketid=-1; 
     Userhandler uh=new Userhandler();
        Transbean tb=transaction();
        Ticketbean kb=new Ticketbean();
        if(tb !=null){
          kb.setBusid(tb.getBusid());
          kb.setDate(tb.getTransdate());
         
           int qaunt=tb.getQuantity();
            List ls=ticketnumber.getSelectedValuesList();
            int x=ls.size();
       if(x > 1 && x==qaunt && qaunt>1)
       {
          
        for (int i=0; i<ls.size();i++){
             
              kb.setTicketcode(""+ls.get(i));
             
               try {
                ticketid= uh.addTicket(kb);
                    inserttik=true;
                    } 
               catch (SQLException ex)
                    {
                   System.out.println("insert ticket error"+ex.getMessage());
                   }
                  }
            }
           else if( qaunt==1 &&ls.size()>0)
           {
               
            Object ob= ticketnumber.getSelectedValue();
            String tkn=""+ob;
            if(tkn.length()>0 && ob!=null){
            kb.setTicketcode(tkn);
              try {
                ticketid=uh.addTicket(kb);
                   inserttik=true;
               } catch (SQLException ex) {
                   System.out.println("insert 2 ticket error"+ex.getMessage());
               }
            }
              
               }
           else
              {
             if(!flag)   
            JOptionPane.showMessageDialog(null,"Please select ticket number and qauntity equal number of tickets");
              
              }
              
       try {
                   uh.closeConnection();
               } catch (SQLException ex) {
                   Logger.getLogger(Usersform.class.getName()).log(Level.SEVERE, null, ex);
               }    
        }
      return ticketid;  
    }
    
    public void fun(){
        Vector vc=new Vector();
        for (int i=1;i<101;i++)
        {
            vc.addElement(i);
        }
       
         ticketnumber=new JList(vc);
          ticketnumber.setLayoutOrientation(VERTICAL_WRAP);
         jScrollPane3.setViewportView(ticketnumber);
         
    }
    public void destCity()
    {
        String st=from.getSelectedItem().toString();
      Userhandler uh=new Userhandler();
         Vector vc=new Vector();
        try {
            vc=uh.getAllDest(st);
        } catch (SQLException ex) {
            System.out.println("get dest "+ex.getMessage());
        }
        try {
            uh.closeConnection();
        } catch (SQLException ex) {
            Logger.getLogger(Usersform.class.getName()).log(Level.SEVERE, null, ex);
        }
          to.removeAllItems();
        for(int i=0; i<vc.size();i++)
        {
          String stt=vc.elementAt(i).toString();
          to.addItem(stt);
        
        }
        
    }
    
    public void getBusId()
    {
         String st=from.getSelectedItem().toString();
        
         String yy=year.getSelectedItem().toString();
         String mm=month.getSelectedItem().toString();
         String dd=day.getSelectedItem().toString();
         
         Userhandler uh=new Userhandler();
      if(st.charAt(1)!='S'&&yy.charAt(0)!='Y' && mm.charAt(0)!='M'&& dd.charAt(0)!='D' ){
           String dest=to.getSelectedItem().toString();
         Vector vc=new Vector();
          count=0;
        try {
            vc=uh.getAllBuss(st,dest);
        } catch (SQLException ex) {
            System.out.println("get busid "+ex.getMessage());
        }
        try {
            uh.closeConnection();
        } catch (SQLException ex) {
            Logger.getLogger(Usersform.class.getName()).log(Level.SEVERE, null, ex);
        }
          busid.removeAllItems();
        for(int i=0; i<vc.size();i++)
        {
          String stt=vc.elementAt(i).toString();
          busid.addItem(stt);
        
        }
         
                
     }
      else
      {
          count=1;
          JOptionPane.showMessageDialog(null," please select city Starting and Destination and Date");
      }
        
    }
    
    
     public void busTakingPrice()
    {
       
   
        Userhandler uh=new Userhandler();
         Vector vc=new Vector ();
          
         String busd=busid.getSelectedItem().toString();
         
        if(busd.charAt(0) != '-'){
         int busID=Integer.parseInt(busd);
    
            try {
                vc=uh.getAllBussTakingOffAndPrice(busID);
            } catch (SQLException ex) {
                System.out.println("taking erorr "+ex.getMessage());
            }
             try {
            uh.closeConnection();
        } catch (SQLException ex) {
            Logger.getLogger(Usersform.class.getName()).log(Level.SEVERE, null, ex);
        }
          
          for(int i=0; i<vc.size();i++)
        {
            Busbean ub = (Busbean)vc.elementAt(i);
            take.setText(ub.getTimeleave());
            price.setText(ub.getPrice());
        }
        }
        else{
            count=2;
            flag2=false;
            JOptionPane.showMessageDialog(null," Please enter all Data ");
        }
    }
    public void startCity()
    {
        Userhandler uh=new Userhandler();
         Vector vc=new Vector();
        try {
            vc=uh.getAllStarting();
        } catch (SQLException ex) {
            System.out.println("get start "+ex.getMessage());
        }
        try {
            uh.closeConnection();
        } catch (SQLException ex) {
            Logger.getLogger(Usersform.class.getName()).log(Level.SEVERE, null, ex);
        }
    
        for(int i=0; i<vc.size();i++)
        {
          String st=vc.elementAt(i).toString();
          from.addItem(st);
        
        }
    
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Usersform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Usersform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Usersform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Usersform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Usersform().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bus;
    private javax.swing.JComboBox busid;
    private javax.swing.JButton cancel;
    private javax.swing.JComboBox day;
    private javax.swing.JComboBox from;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton logout;
    private javax.swing.JButton logout1;
    private javax.swing.JComboBox month;
    private javax.swing.JLabel msg;
    private javax.swing.JButton ok;
    private javax.swing.JTextField price;
    private javax.swing.JLabel prices;
    private javax.swing.JLabel quant;
    private javax.swing.JTextField quantity;
    private javax.swing.JButton reset;
    private javax.swing.JButton save;
    private javax.swing.JTextField take;
    private javax.swing.JLabel taking;
    private javax.swing.JList ticketnumber;
    private javax.swing.JLabel tknumber;
    private javax.swing.JComboBox to;
    private javax.swing.JButton tot;
    private javax.swing.JTextField total;
    private javax.swing.JComboBox transday;
    private javax.swing.JComboBox transmonth;
    private javax.swing.JButton transok;
    private javax.swing.JTable transperdate;
    private javax.swing.JTable transtable;
    private javax.swing.JComboBox transyear;
    private javax.swing.JPanel user;
    private javax.swing.JComboBox year;
    // End of variables declaration//GEN-END:variables
}
